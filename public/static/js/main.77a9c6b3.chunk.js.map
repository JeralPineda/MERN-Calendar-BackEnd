{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducers.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/loader/Loader.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","events","activeEvent","modalOpen","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","xtoken","localStorage","getItem","token","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startLogout","dispatch","clear","logout","login","user","checkingFinish","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","toggleForm","preventDefault","document","querySelector","classList","toggle","className","src","alt","onSubmit","email","password","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","href","onClick","Navbar","useSelector","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","after","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","Loader","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.77a9c6b3.chunk.js","sourcesContent":["export const types = {\r\n   uiOpenModal: '[ui] Open modal',\r\n   uiCloseModal: '[ui] Close modal',\r\n\r\n   eventSetActive: '[event] Set active',\r\n   eventLogout: '[event] Logout event',\r\n\r\n   eventStartAddNew: '[event] Start add new',\r\n   eventAddNew: '[event] Add new',\r\n   eventClearActiveEvent: '[event] Clear active event',\r\n   eventUpdated: '[event] Event updated',\r\n   eventDeleted: '[event] Event Deleted',\r\n   eventLoaded: '[event] Event loaded',\r\n\r\n   authCheckingFinish: '[auth] Finish checking login state',\r\n   authStartLogin: '[auth] Start login',\r\n   authLogin: '[auth] Login',\r\n   authStartRegister: '[auth] Start register',\r\n   authStartTokenRenew: '[auth] Start token renew',\r\n   authLogout: '[auth] Logout',\r\n};\r\n","import { types } from '../types/types';\r\n\r\n//  {\r\n//          id: '1616cervevf16',\r\n//          title: 'Cumpleaños',\r\n//          start: moment().toDate(), //new Date\r\n//          end: moment().add(2, 'hours').toDate(),\r\n//          notes: 'Comprar pastel',\r\n//          user: {\r\n//             _id: '1234',\r\n//             name: 'Jeral',\r\n//          },\r\n//       },\r\n\r\nconst initialState = {\r\n   events: [],\r\n   activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.eventSetActive:\r\n         return {\r\n            ...state,\r\n            activeEvent: action.payload,\r\n         };\r\n\r\n      case types.eventAddNew:\r\n         return {\r\n            ...state,\r\n            events: [...state.events, action.payload],\r\n         };\r\n\r\n      case types.eventClearActiveEvent:\r\n         return {\r\n            ...state,\r\n            activeEvent: null,\r\n         };\r\n\r\n      case types.eventUpdated:\r\n         return {\r\n            ...state,\r\n            events: state.events.map(\r\n               (e) => (e.id === action.payload.id ? action.payload : e) //regresa el evento actualizado\r\n            ),\r\n         };\r\n\r\n      case types.eventDeleted:\r\n         return {\r\n            ...state,\r\n            events: state.events.filter(\r\n               (e) => e.id !== state.activeEvent.id //eliminar el event\r\n            ),\r\n            activeEvent: null,\r\n         };\r\n\r\n      case types.eventLoaded:\r\n         return {\r\n            ...state,\r\n            events: [...action.payload],\r\n         };\r\n\r\n      case types.eventLogout:\r\n         return {\r\n            ...initialState,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n   modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.uiOpenModal:\r\n         return {\r\n            ...state,\r\n            modalOpen: true,\r\n         };\r\n\r\n      case types.uiCloseModal:\r\n         return {\r\n            ...state,\r\n            modalOpen: false,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n   checking: true,\r\n   //    uid: null,\r\n   //    name: null,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.authLogin:\r\n         return {\r\n            ...state,\r\n            ...action.payload,\r\n            checking: false,\r\n         };\r\n\r\n      case types.authCheckingFinish:\r\n         return {\r\n            ...state,\r\n            checking: false,\r\n         };\r\n\r\n      case types.authLogout:\r\n         return {\r\n            checking: false,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","// Combinación de todos los reducers\r\nimport { combineReducers } from 'redux';\r\n\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n   ui: uiReducer,\r\n   calendar: calendarReducer,\r\n   auth: authReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n   rootReducer, //\r\n   composeEnhancers(\r\n      applyMiddleware(thunk) //\r\n   )\r\n);\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n   const url = `${baseUrl}/${endpoint}`; //localhost:400/api/\r\n\r\n   if (method === 'GET') {\r\n      return fetch(url);\r\n   } else {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            'Content-type': 'application/json',\r\n         },\r\n         body: JSON.stringify(data),\r\n      });\r\n   }\r\n};\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n   const url = `${baseUrl}/${endpoint}`; //localhost:400/api/\r\n\r\n   //    leer el token del localstorage\r\n   const xtoken = localStorage.getItem('x-token') || '';\r\n\r\n   const token = `Bearer ${xtoken}`;\r\n\r\n   if (method === 'GET') {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            'x-token': token,\r\n         },\r\n      });\r\n   } else {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            'Content-type': 'application/json',\r\n            'x-token': token,\r\n         },\r\n         body: JSON.stringify(data),\r\n      });\r\n   }\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken };\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n   return events.map((e) => ({\r\n      ...e,\r\n      end: moment(e.end).toDate(),\r\n      start: moment(e.start).toDate(),\r\n   }));\r\n};\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { types } from '../types/types';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n   return async (dispatch, getState) => {\r\n      //    Obtener info del user desde el state\r\n      const { uid, name } = getState().auth;\r\n\r\n      try {\r\n         const resp = await fetchConToken('events', event, 'POST');\r\n         const body = await resp.json();\r\n\r\n         if (body.ok) {\r\n            event.id = body.evento.id;\r\n            event.user = {\r\n               _id: uid,\r\n               name: name,\r\n            };\r\n\r\n            dispatch(eventAddNew(event));\r\n         } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n         }\r\n      } catch (error) {\r\n         console.log(error);\r\n         Swal.fire('Error', 'No se pudo crear la nota', 'error');\r\n      }\r\n   };\r\n};\r\n\r\nexport const eventStartLoading = () => {\r\n   return async (dispatch) => {\r\n      try {\r\n         const resp = await fetchConToken('events');\r\n         const body = await resp.json();\r\n\r\n         const events = prepareEvents(body.eventos);\r\n\r\n         //  Mandar los eventos al reducer para que los muestre\r\n         dispatch(eventLoaded(events));\r\n      } catch (error) {\r\n         console.log(error);\r\n         Swal.fire('Error', 'No se encontraron eventos', 'error');\r\n      }\r\n   };\r\n};\r\n\r\nexport const eventStartUpdated = (event) => {\r\n   return async (dispatch) => {\r\n      try {\r\n         const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n         const body = await resp.json();\r\n\r\n         if (body.ok) {\r\n            dispatch(eventUpdated(event));\r\n         } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n         }\r\n      } catch (error) {\r\n         console.log(error);\r\n         Swal.fire('Error', 'No se pudo actualizar el evento', 'error');\r\n      }\r\n   };\r\n};\r\n\r\nexport const eventStartDelete = () => {\r\n   return async (dispatch, getState) => {\r\n      const { id } = getState().calendar.activeEvent;\r\n\r\n      try {\r\n         const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n         const body = await resp.json();\r\n\r\n         if (body.ok) {\r\n            dispatch(eventDeleted());\r\n         } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n         }\r\n      } catch (error) {\r\n         console.log(error);\r\n         Swal.fire('Error', 'No se pudo eliminar el evento', 'error');\r\n      }\r\n   };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n   type: types.eventAddNew,\r\n   payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n   type: types.eventSetActive,\r\n   payload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n   type: types.eventClearActiveEvent,\r\n});\r\n\r\nconst eventUpdated = (event) => ({\r\n   type: types.eventUpdated,\r\n   payload: event,\r\n});\r\n\r\nconst eventDeleted = () => ({\r\n   type: types.eventDeleted,\r\n});\r\n\r\nconst eventLoaded = (events) => ({\r\n   type: types.eventLoaded,\r\n   payload: events,\r\n});\r\n\r\n// acción para limpiar los eventos del store al hacer logout\r\n// debido a que al activar una nota y salir y volver a entrar se mantenía activo el botón de eliminar\r\nexport const eventLogout = () => ({\r\n   type: types.eventLogout,\r\n});\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { fetchSinToken, fetchConToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventLogout } from './events';\r\n\r\nexport const startLogin = (email, password) => {\r\n   return async (dispatch) => {\r\n      //    Petición login\r\n      const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n\r\n      const body = await resp.json();\r\n\r\n      //   Si el body es ok: true guardamos el token en localstorage\r\n      if (body.ok) {\r\n         localStorage.setItem('x-token', body.token);\r\n         localStorage.setItem('token-init-date', new Date().getTime()); //fecha en que se creo el token\r\n\r\n         dispatch(\r\n            login({\r\n               uid: body.uid,\r\n               name: body.name,\r\n            })\r\n         );\r\n      } else {\r\n         Swal.fire('Error', body.msg, 'error');\r\n      }\r\n   };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n   return async (dispatch) => {\r\n      //    Petición login\r\n      const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n\r\n      const body = await resp.json();\r\n\r\n      //   Si el body es ok: true guardamos el token en localstorage\r\n      if (body.ok) {\r\n         localStorage.setItem('x-token', body.token);\r\n         localStorage.setItem('token-init-date', new Date().getTime()); //fecha en que se creo el token\r\n\r\n         dispatch(\r\n            login({\r\n               uid: body.uid,\r\n               name: body.name,\r\n            })\r\n         );\r\n      } else {\r\n         Swal.fire('Error', body.msg, 'error');\r\n      }\r\n   };\r\n};\r\n\r\nexport const startChecking = () => {\r\n   return async (dispatch) => {\r\n      //    Petición login\r\n      const resp = await fetchConToken('auth/renew');\r\n\r\n      const body = await resp.json();\r\n\r\n      //   Si el body es ok: true guardamos el token en localstorage\r\n      if (body.ok) {\r\n         localStorage.setItem('x-token', body.token);\r\n         localStorage.setItem('token-init-date', new Date().getTime()); //fecha en que se creo el token\r\n\r\n         dispatch(\r\n            login({\r\n               uid: body.uid,\r\n               name: body.name,\r\n            })\r\n         );\r\n      } else {\r\n         //  disparamos la acción\r\n         dispatch(checkingFinish());\r\n      }\r\n   };\r\n};\r\n\r\nexport const startLogout = () => {\r\n   return (dispatch) => {\r\n      //    limpiamos el localstorage\r\n      localStorage.clear();\r\n\r\n      dispatch(logout());\r\n      dispatch(eventLogout());\r\n   };\r\n};\r\n\r\n// acción para guardar el usuario autenticado en el state\r\nconst login = (user) => ({\r\n   type: types.authLogin,\r\n   payload: user,\r\n});\r\n\r\n// acción si el token no es correcto\r\nconst checkingFinish = () => ({\r\n   type: types.authCheckingFinish,\r\n});\r\n\r\n// acción cerrar sesión\r\nconst logout = () => ({\r\n   type: types.authLogout,\r\n});\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n   const [values, setValues] = useState(initialState);\r\n\r\n   const reset = () => {\r\n      setValues(initialState);\r\n   };\r\n\r\n   const handleInputChange = ({ target }) => {\r\n      setValues({\r\n         ...values,\r\n         [target.name]: target.value,\r\n      });\r\n   };\r\n\r\n   return [values, handleInputChange, reset];\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\n\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const [formLoginValues, handleLoginInputChange] = useForm({\r\n      lEmail: '',\r\n      lPassword: '',\r\n   });\r\n   const { lEmail, lPassword } = formLoginValues;\r\n\r\n   const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n      rName: '',\r\n      rEmail: '',\r\n      rPassword1: '',\r\n      rPassword2: '',\r\n   });\r\n   const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n   //  Effecto en los formularios de login y registro\r\n   const toggleForm = (e) => {\r\n      e.preventDefault();\r\n      const container = document.querySelector('.container');\r\n      container.classList.toggle('active');\r\n   };\r\n\r\n   const handleLogin = (e) => {\r\n      e.preventDefault();\r\n\r\n      dispatch(startLogin(lEmail, lPassword));\r\n   };\r\n\r\n   const handleRegister = (e) => {\r\n      e.preventDefault();\r\n\r\n      //   Validación de las contraseñas\r\n      if (rPassword1 !== rPassword2) {\r\n         Swal.fire('Error', 'Ambas contraseñas deben de ser iguales', 'error');\r\n      }\r\n\r\n      dispatch(startRegister(rEmail, rPassword1, rName));\r\n   };\r\n\r\n   return (\r\n      <section>\r\n         <div className='container'>\r\n            <div className='user signinBx'>\r\n               <div className='imgBx'>\r\n                  <img src='./images/5.jpg' alt='' />\r\n               </div>\r\n\r\n               <div className='formBx'>\r\n                  <form onSubmit={handleLogin}>\r\n                     <h2>Ingreso</h2>\r\n\r\n                     <input\r\n                        type='text' //\r\n                        placeholder='Correo'\r\n                        name='lEmail'\r\n                        value={lEmail}\r\n                        onChange={handleLoginInputChange}\r\n                     />\r\n\r\n                     <input\r\n                        type='password' //\r\n                        placeholder='Contraseña'\r\n                        name='lPassword'\r\n                        value={lPassword}\r\n                        onChange={handleLoginInputChange}\r\n                     />\r\n\r\n                     <input type='submit' name='' value='Ingresar' />\r\n\r\n                     <p className='signup'>\r\n                        No tienes una cuenta ?\r\n                        <a href='/login' onClick={toggleForm}>\r\n                           Crear cuenta\r\n                        </a>\r\n                     </p>\r\n                  </form>\r\n               </div>\r\n            </div>\r\n\r\n            <div className='user signupBx'>\r\n               <div className='formBx'>\r\n                  <form onSubmit={handleRegister}>\r\n                     <h2>Registro</h2>\r\n\r\n                     <input\r\n                        type='text' //\r\n                        placeholder='Nombre'\r\n                        name='rName'\r\n                        value={rName}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n\r\n                     <input\r\n                        type='email' //\r\n                        placeholder='Correo'\r\n                        name='rEmail'\r\n                        value={rEmail}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n\r\n                     <input\r\n                        type='password' //\r\n                        placeholder='Contraseña'\r\n                        name='rPassword1'\r\n                        value={rPassword1}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n\r\n                     <input\r\n                        type='password' //\r\n                        placeholder='Confirmar Contraseña'\r\n                        name='rPassword2'\r\n                        value={rPassword2}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n\r\n                     <input\r\n                        type='submit' //\r\n                        name=''\r\n                        value='Crear cuenta'\r\n                     />\r\n\r\n                     <p className='signup'>\r\n                        Ya tienes una cuenta ?\r\n                        <a href='/login' onClick={toggleForm}>\r\n                           Ingresar\r\n                        </a>\r\n                     </p>\r\n                  </form>\r\n               </div>\r\n\r\n               <div className='imgBx'>\r\n                  <img src='./images/1.jpg' alt='' />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n   const { name } = useSelector((state) => state.auth);\r\n   const dispatch = useDispatch();\r\n\r\n   const handleLogout = () => {\r\n      dispatch(startLogout());\r\n   };\r\n\r\n   return (\r\n      <div className='navbar navbar-dark bg-dark mb-4'>\r\n         <span className='navbar-brand'>{name}</span>\r\n\r\n         <button onClick={handleLogout} className='btn btn-outline-light'>\r\n            <i className='fas fa-sign-out-alt'></i>\r\n            <span> Salir</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n","// Cambiar mensajes del calendario en español\r\nexport const messages = {\r\n   allDay: 'Todo el día',\r\n   previous: '<',\r\n   next: '>',\r\n   today: 'Hoy',\r\n   month: 'Mes',\r\n   week: 'Semana',\r\n   day: 'Día',\r\n   agenda: 'Agenda',\r\n   date: 'Fecha',\r\n   time: 'Hora',\r\n   event: 'Evento',\r\n   noEventsInRange: 'No hay eventos en este rango',\r\n   showMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n   const { title, user } = event;\r\n   return (\r\n      <div>\r\n         <strong>{title} </strong>\r\n         <span>- {user.name}</span>\r\n      </div>\r\n   );\r\n};\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({\r\n   type: types.uiOpenModal,\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n   type: types.uiCloseModal,\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\n\r\n// Las constantes o variables afuera, es para que no se vuelva a generar cada vez que hay un cambio\r\n\r\nconst customStyles = {\r\n   content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n   },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\n// hora inicio\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 3:45:50\r\n\r\n// hora fin, 1 hora mas\r\nconst after = now.clone().add(1, 'hours'); // 3:45:50\r\n\r\nconst initEvent = {\r\n   title: '',\r\n   notes: '',\r\n   start: now.toDate(),\r\n   end: after.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n   const { modalOpen } = useSelector((state) => state.ui);\r\n   const { activeEvent } = useSelector((state) => state.calendar);\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const [dateStart, setDateStart] = useState(now.toDate()); //fecha inicio\r\n   const [dateEnd, setDateEnd] = useState(after.toDate()); //fecha fin\r\n\r\n   const [titleValid, setTitleValid] = useState(true); //validaciones\r\n\r\n   const [formValues, setFormValues] = useState(initEvent);\r\n\r\n   const { notes, title, start, end } = formValues;\r\n\r\n   useEffect(() => {\r\n      if (activeEvent) {\r\n         setFormValues(activeEvent);\r\n      } else {\r\n         setFormValues(initEvent); //limpiar modal\r\n      }\r\n   }, [activeEvent, setFormValues]);\r\n\r\n   //    efecto para mostrar la info del evento al dar doble click en el\r\n   const handleInputChange = ({ target }) => {\r\n      setFormValues({\r\n         ...formValues,\r\n         [target.name]: target.value,\r\n      });\r\n   };\r\n\r\n   const closeModal = () => {\r\n      dispatch(uiCloseModal());\r\n      dispatch(eventClearActiveEvent()); //acción limpiar activeEvent\r\n      setFormValues(initEvent); //limpiar el form del modal\r\n   };\r\n\r\n   const handleStartDateChange = (e) => {\r\n      setDateStart(e);\r\n\r\n      setFormValues({\r\n         ...formValues,\r\n         start: e,\r\n      });\r\n   }; //fecha inicio\r\n\r\n   const handleEndDateChange = (e) => {\r\n      setDateEnd(e);\r\n\r\n      setFormValues({\r\n         ...formValues,\r\n         end: e,\r\n      });\r\n   }; //fecha fin\r\n\r\n   const handleSubmitEvent = (e) => {\r\n      e.preventDefault();\r\n\r\n      const momentStart = moment(start);\r\n      const momentEnd = moment(end);\r\n\r\n      // Validaciones formulario\r\n      if (momentStart.isSameOrAfter(momentEnd)) {\r\n         //   si la fecha de inicio es igual o esta después es error\r\n         return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n      }\r\n\r\n      if (title.trim().length < 2) {\r\n         return setTitleValid(false);\r\n      }\r\n\r\n      if (activeEvent) {\r\n         //   si el evento esta activo se actualiza\r\n         dispatch(eventStartUpdated(formValues));\r\n      } else {\r\n         //   Si el evento esta en null se crea el evento\r\n         dispatch(eventStartAddNew(formValues));\r\n      }\r\n\r\n      setTitleValid(true);\r\n      closeModal();\r\n   };\r\n\r\n   return (\r\n      <Modal\r\n         isOpen={modalOpen}\r\n         onRequestClose={closeModal} //close\r\n         style={customStyles}\r\n         closeTimeoutMS={200}\r\n         className='modal'\r\n         overlayClassName='modal-fondo'\r\n      >\r\n         <h1 className='modal-h1'> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n\r\n         <hr />\r\n\r\n         <form className='container' onSubmit={handleSubmitEvent}>\r\n            <div className='form-group'>\r\n               <label>Fecha y hora inicio</label>\r\n\r\n               <DateTimePicker\r\n                  onChange={handleStartDateChange} //\r\n                  value={dateStart}\r\n                  className='form-control'\r\n               />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n               <label>Fecha y hora fin</label>\r\n\r\n               <DateTimePicker\r\n                  onChange={handleEndDateChange} //\r\n                  value={dateEnd}\r\n                  minDate={dateStart} // date fin >  inicio\r\n                  className='form-control'\r\n               />\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <div className='form-group'>\r\n               <label>Titulo y notas</label>\r\n\r\n               <input\r\n                  type='text' //\r\n                  className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                  placeholder='Título del evento'\r\n                  name='title'\r\n                  autoComplete='off'\r\n                  value={title}\r\n                  onChange={handleInputChange}\r\n               />\r\n\r\n               <small id='emailHelp' className='form-text text-muted'>\r\n                  Una descripción corta\r\n               </small>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n               <textarea\r\n                  type='text' //\r\n                  className='form-control'\r\n                  placeholder='Notas'\r\n                  rows='5'\r\n                  name='notes'\r\n                  value={notes}\r\n                  onChange={handleInputChange}\r\n               ></textarea>\r\n\r\n               <small id='emailHelp' className='form-text text-muted'>\r\n                  Información adicional\r\n               </small>\r\n            </div>\r\n\r\n            <button type='submit' className='btn btn-outline-primary btn-block'>\r\n               <i className='far fa-save'></i>\r\n\r\n               <span> Guardar</span>\r\n            </button>\r\n         </form>\r\n      </Modal>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const handleNewEvent = () => {\r\n      dispatch(uiOpenModal());\r\n   };\r\n\r\n   return (\r\n      <button className='btn btn-primary fab' onClick={handleNewEvent}>\r\n         <i className='fas fa-plus'></i>\r\n      </button>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const handleDeleteEvent = () => {\r\n      dispatch(eventStartDelete()); //acción eliminar evento\r\n   };\r\n\r\n   return (\r\n      <button className='btn btn-danger fab-danger' onClick={handleDeleteEvent}>\r\n         <i className='fas fa-trash'></i>\r\n      </button>\r\n   );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es'; //Cambiar idioma al calendario(fechas)\r\n\r\nmoment.locale('es'); //Cambiar idioma al calendario(fechas)\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   //  Leer los events del store\r\n   const { events, activeEvent } = useSelector((state) => state.calendar);\r\n   const { uid } = useSelector((state) => state.auth);\r\n\r\n   const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n   //    efecto para disparar la acción que muestra los eventos\r\n   useEffect(() => {\r\n      dispatch(eventStartLoading());\r\n   }, [dispatch]);\r\n\r\n   const onDoubleClick = (e) => {\r\n      //   console.log(e);\r\n      dispatch(uiOpenModal());\r\n   };\r\n\r\n   const onSelectEvent = (e) => {\r\n      dispatch(eventSetActive(e));\r\n   };\r\n\r\n   const onViewChange = (e) => {\r\n      //al momento de hacer un cambio, guardar y decirle al calendario que inicie desde ahi\r\n      setLastView(e);\r\n      localStorage.setItem('lastView', e);\r\n   };\r\n\r\n   const onSelectSlot = (e) => {\r\n      //   console.log(e);\r\n      dispatch(eventClearActiveEvent());\r\n   };\r\n\r\n   const eventStyleGetter = (event, start, end, isSelected) => {\r\n      const style = {\r\n         backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\r\n         borderRadius: '0px',\r\n         opacity: 0.8,\r\n         display: 'block',\r\n         color: 'white',\r\n      };\r\n\r\n      return {\r\n         style,\r\n      };\r\n   };\r\n\r\n   return (\r\n      <div className='calendar-screen'>\r\n         <Navbar />\r\n\r\n         <Calendar\r\n            localizer={localizer}\r\n            events={events}\r\n            startAccessor='start'\r\n            endAccessor='end'\r\n            messages={messages} //mensajes en español\r\n            eventPropGetter={eventStyleGetter} //estilos del evento\r\n            onDoubleClickEvent={onDoubleClick}\r\n            onSelectEvent={onSelectEvent}\r\n            onView={onViewChange}\r\n            onSelectSlot={onSelectSlot}\r\n            selectable={true}\r\n            view={lastView}\r\n            components={{\r\n               event: CalendarEvent,\r\n            }}\r\n         />\r\n\r\n         <AddNewFab />\r\n\r\n         {\r\n            //  Si el evnto esta activo se muestra el componente(botón eliminar)\r\n            activeEvent && <DeleteEventFab />\r\n         }\r\n\r\n         <CalendarModal />\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Loader = () => {\r\n   return (\r\n      <div className='loader-background'>\r\n         <div className='loader'></div>\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n   return <Route {...rest} component={(props) => (isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />)} />;\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n   isAuthenticated: PropTypes.bool.isRequired,\r\n   component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n   return <Route {...rest} component={(props) => (isAuthenticated ? <Redirect to='/' /> : <Component {...props} />)} />;\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n   isAuthenticated: PropTypes.bool.isRequired,\r\n   component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { Loader } from '../components/loader/Loader';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n   const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(startChecking());\r\n   }, [dispatch]);\r\n\r\n   if (checking) {\r\n      return <Loader />;\r\n   }\r\n\r\n   return (\r\n      <Router>\r\n         <div>\r\n            <Switch>\r\n               <PublicRoute\r\n                  exact //\r\n                  path='/login'\r\n                  component={LoginScreen}\r\n                  isAuthenticated={!!uid} //!! si tengo información\r\n               />\r\n\r\n               <PrivateRoute\r\n                  exact\r\n                  path='/'\r\n                  component={CalendarScreen}\r\n                  isAuthenticated={!!uid} //!! si tengo información\r\n               />\r\n\r\n               <Redirect to='/' />\r\n            </Switch>\r\n         </div>\r\n      </Router>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n   return (\r\n      <Provider store={store}>\r\n         <AppRouter />\r\n      </Provider>\r\n   );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}